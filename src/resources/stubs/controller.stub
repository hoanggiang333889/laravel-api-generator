<?php
{{useTemplate}}
use Illuminate\Http\Request;
use Illuminate\Http\Response;
use Illuminate\Support\Facades\Gate;
use App\Http\Controllers\Controller;

class {{modelNameCamel}}Controller extends Controller
{
    /**
     * @var App\Services\{{modelNameCamel}}Service {{modelName}}Service
     */
    protected ${{modelName}}Service;

    public function __construct({{modelNameCamel}}Service ${{modelName}}Service)
    {
        $this->{{modelName}}Service = ${{modelName}}Service;
    }

    /**
     * Display a listing of the resource.
     *
     * @param \Illuminate\Http\Request $request
     * @return \Illuminate\Http\Response
     *
     */
    public function index(Request $request)
    {
        $input = $request->all();
        ${{modelNameLower}} = $this->{{modelName}}Service->list($input);
        $result = {{modelNameCamel}}Resource::collection(${{modelNameLower}});

        return response()->success(self::INDEX, $result);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param \App\Http\Requests\{{ $modelNameCamel }}\Create{{ $modelNameCamel }}Request $request
     * @return \Illuminate\Http\Response
     *
     * @param Request $request
     * @return Response
     *
     */
    public function store(Create{{modelNameCamel}}Request $request)
    {
        $input = $request->all();
        ${{modelName}} = $this->{{modelName}}Service->create($input);
        $result =  new {{modelNameCamel}}Resource(${{modelName}});

        return response()->success(self::STORE, $result);
    }

    /**
     * Display the specified resource.
     *
     * @param \App\Models\{{modelNameCamel}}  ${{$modelName}}
     * @return \Illuminate\Http\Response
     *
     */
    public function show(Request $request, {{modelNameCamel}} ${{modelName}})
    {
        $input = $request->all();
        $result = new {{modelNameCamel}}Resource(${{modelName}});

        return response()->success(self::SHOW, $result);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param \App\Http\Requests\{{modelNameCamel}}\Update{{modelNameCamel}}Request $request
     * @param \App\Models\{{modelNameCamel}}  ${{modelName}}
     * @return \Illuminate\Http\Response
     *
     */
    public function update(Update{{modelNameCamel}}Request $request, {{modelNameCamel}} ${{modelName}})
    {
        $input = $request->all();
        $this->{{modelName}}Service->update(${{modelName}}, $input);
        $result = new {{modelNameCamel}}Resource(${{modelName}});

        return response()->success(self::UPDATE, $result);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param \App\Models\{{modelNameCamel}}  ${{modelName}}
     * @return \Illuminate\Http\Response
     *
     */
    public function destroy({{modelNameCamel}} ${{modelName}})
    {
        $result = $this->{{modelName}}Service->destroy(${{modelName}});

        return response()->success(self::REMOVE, $result);
    }
}
